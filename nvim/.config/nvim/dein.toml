
[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]] # color schema
repo = 'trevordmiller/nova-vim'
hook_add = '''
  colorscheme nova
  set background=dark
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
  let g:airline_theme='nova'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#branch#enabled = 0
  let g:airline#extensions#readonly#enabled = 0
  let g:airline#extensions#tabline#enabled = 1
  let g:airline_section_c = ''
'''

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size = 1
'''

[[plugins]] # 括弧補完
repo = "cohama/lexima.vim"

[[plugins]] # auto indent
repo = "Chiel92/vim-autoformat"

[[plugins]] # syntax highlight
repo = 'othree/yajs.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:python_host_prog='/usr/local/bin/python2'
  let g:python3_host_prog='/usr/local/bin/python3'
'''

[[plugins]] # 末尾spaceの可視化
repo = 'ntpeters/vim-better-whitespace'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  nmap ' :Buffers
  nmap " :Files
  nmap 'a :Ag
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
  set hidden

  let g:LanguageClient_serverCommands = {
      \ 'ruby': ['solargraph', 'stdio'],
      \ 'sh': ['bash-language-server', 'start'],
      \ 'dockerfile': ['docker-langserver', '--stdio'],
      \ 'javascript': ['node', '~/langserver/javascript-typescript-langserver/lib/language-server-stdio'],
      \ 'typescript': ['tcp://127.0.0.1:1982'],
      \ 'yaml': ['node', '~/langserver/yaml-language-server/out/server/src/server.js', '--stdio'],
      \ 'go': ['go-langserver'],
      \ }

  autocmd Filetype typescript :!node ~/langserver/javascript-typescript-langserver/lib/language-server --port 1982&

  function! s:go_pre_write()
    let view = winsaveview()
    silent :%!goimports
    silent :call LanguageClient_textDocument_formatting()
    silent call winrestview(view)
  endfunction

  autocmd BufWritePre *.go :call <SID>go_pre_write()

  " Or map each action separately
  nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
  nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
  nnoremap 'r :call LanguageClient#textDocument_rename()<CR>
  nnoremap 'f :call LanguageClient#textDocument_formatting()<CR>
  nnoremap <C-t> <C-o>
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_sign_error = '⌶'
  let g:ale_sign_warning = '▻'
  highlight link ALEWarningSign Special
'''

[[plugins]]
repo = "ruanyl/vim-gh-line"
hook_add = """
  let g:gh_line_map = 'ghline'
  let g:gh_github_domain = $GHE_DOMAIN
"""

[[plugins]]
repo = "leafgarland/typescript-vim"

